/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngotest;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
/**
 *
 * @author Thomas
 */
public class AndraUppgifterRuta extends javax.swing.JFrame {

    /**
     * Creates new form ÄndraUppgifterRuta
     */
    public AndraUppgifterRuta(InfDB idb, String aid) {
        initComponents();
        this.idb = idb;
        this.aid = aid;
    }

    public InfDB idb;
    public String aid;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jValAvAndring = new javax.swing.JComboBox<>();
        jTillbakaKnapp = new javax.swing.JButton();
        jInmatningsFalt = new javax.swing.JTextField();
        jAndraKnapp = new javax.swing.JButton();
        jHjalpRuta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jValAvAndring.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Förnamn", "Efternamn", "Adress", "Epost", "Telefon Nmr", "Lösenord" }));
        jValAvAndring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jValAvAndringActionPerformed(evt);
            }
        });

        jTillbakaKnapp.setText("Tillbaka");
        jTillbakaKnapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTillbakaKnappActionPerformed(evt);
            }
        });

        jAndraKnapp.setText("Ändra");
        jAndraKnapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAndraKnappActionPerformed(evt);
            }
        });

        jHjalpRuta.setText("Förnamnet måste börja på en stor bokstav och får inte innehålla några specialtecken eller nummer.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jHjalpRuta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jValAvAndring, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jInmatningsFalt))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTillbakaKnapp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jAndraKnapp)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jValAvAndring, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInmatningsFalt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jHjalpRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTillbakaKnapp)
                    .addComponent(jAndraKnapp))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jValAvAndringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jValAvAndringActionPerformed

                String alternativ = jValAvAndring.getSelectedItem().toString();
        if(alternativ.equals("Förnamn")){
            jHjalpRuta.setText("Förnamnet måste börja på en stor bokstav och får inte innehålla några specialtecken eller nummer.");
        }
        if(alternativ.equals("Efternamn")){
            jHjalpRuta.setText("Efteramnet måste börja på en stor bokstav och får inte innehålla några specialtecken eller nummer.");
        }
        if(alternativ.equals("Adress")){
            jHjalpRuta.setText("Adressen måste skrivas på följande sätt: 123 text text, text | 123 text | text 123. Måste även börja på stor bokstav.");
        }
        if(alternativ.equals("Telefon Nmr")){
            jHjalpRuta.setText("Telefonnumret måste skrivas på följande sätt: XXX-XXX-XXXX. Notera att bindesträcken måste vara med.");
        }
        if(alternativ.equals("Epost")){
            jHjalpRuta.setText("Eposten måste innehålla ett @ och en domän.com (kan vara se, com, co.uk. ru mm). ");
        }
        if(alternativ.equals("Lösenord")){
            jHjalpRuta.setText("Lösenordet har inga krav.");
        }
    }//GEN-LAST:event_jValAvAndringActionPerformed

    private void jTillbakaKnappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTillbakaKnappActionPerformed
        setVisible(false);
        new KontoRuta(idb, aid).setVisible(true);
    }//GEN-LAST:event_jTillbakaKnappActionPerformed

    private void jAndraKnappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAndraKnappActionPerformed
        // TODO add your handling code here:
        String alternativ = jValAvAndring.getSelectedItem().toString();
        if(alternativ.equals("Förnamn")){
            andraNamn();
        }
        if(alternativ.equals("Efternamn")){
            andraEfternamn();
        }
        if(alternativ.equals("Adress")){
            andraAdress();
        }
        if(alternativ.equals("Telefon Nmr")){
            andraTelefonnummer();
        }
        if(alternativ.equals("Epost")){
            andraEmail();
        }
        if(alternativ.equals("Lösenord")){
            andraLosenord();
        }
    }//GEN-LAST:event_jAndraKnappActionPerformed

    public void andraNamn(){
        
        String inmatning = jInmatningsFalt.getText();
        if(ValideringsKlass.textFaltHarVarde(jInmatningsFalt)){
            if(ValideringsKlass.namnKontroll(jInmatningsFalt)){
                try{
                   idb.update("Update anstalld set fornamn = " + "'" + inmatning + "'" + "where aid = '" + aid + "'");
                   JOptionPane.showMessageDialog(null, "Ändringen gick igenom!");
                }
                catch (InfException a){
                    JOptionPane.showMessageDialog(null, "Något blev fel med databasen!");
                    System.out.println(a.getMessage());
                }
            }
        }
    }
    
    public void andraEfternamn(){
        
                String inmatning = jInmatningsFalt.getText();
        if(ValideringsKlass.textFaltHarVarde(jInmatningsFalt)){
            if(ValideringsKlass.namnKontroll(jInmatningsFalt)){
                try{
                   idb.update("Update anstalld set efternamn = " + "'" + inmatning + "'" + "where aid = '" + aid + "'");
                   JOptionPane.showMessageDialog(null, "Ändringen gick igenom!");
                }
                catch (InfException a){
                    JOptionPane.showMessageDialog(null, "Något blev fel med databasen!");
                    System.out.println(a.getMessage());
                }
            }
        }
    }
    
    public void andraAdress(){
        
                String inmatning = jInmatningsFalt.getText();
        if(ValideringsKlass.textFaltHarVarde(jInmatningsFalt)){
            if(ValideringsKlass.adressKontroll(jInmatningsFalt)){
                try{
                   idb.update("Update anstalld set adress = " + "'" + inmatning + "'" + "where aid = '" + aid + "'");
                   JOptionPane.showMessageDialog(null, "Ändringen gick igenom!");
                }
                catch (InfException a){
                    JOptionPane.showMessageDialog(null, "Något blev fel med databasen!");
                    System.out.println(a.getMessage());
                }
            }
        }
    }
    
    public void andraTelefonnummer(){
        
                String inmatning = jInmatningsFalt.getText();
        if(ValideringsKlass.textFaltHarVarde(jInmatningsFalt)){
            if(ValideringsKlass.telefonnummerKontroll(jInmatningsFalt)){
                try{
                   idb.update("Update anstalld set telefon = " + "'" + inmatning + "'" + "where aid = '" + aid + "'");
                   JOptionPane.showMessageDialog(null, "Ändringen gick igenom!");
                }
                catch (InfException a){
                    JOptionPane.showMessageDialog(null, "Något blev fel med databasen!");
                    System.out.println(a.getMessage());
                }
            }
        }
    }
    
    public void andraEmail(){
        
                String inmatning = jInmatningsFalt.getText();
        if(ValideringsKlass.textFaltHarVarde(jInmatningsFalt)){
            if(ValideringsKlass.emailKontroll(jInmatningsFalt)){
                try{
                   idb.update("Update anstalld set epost = " + "'" + inmatning + "'" + "where aid = '" + aid + "'");
                   JOptionPane.showMessageDialog(null, "Ändringen gick igenom!");
                }
                catch (InfException a){
                    JOptionPane.showMessageDialog(null, "Något blev fel med databasen!");
                    System.out.println(a.getMessage());
                }
            }
        }
    }
    
    public void andraLosenord(){
        
        String inmatning = jInmatningsFalt.getText();
        if(ValideringsKlass.textFaltHarVarde(jInmatningsFalt)){
                try{
                   idb.update("Update anstalld set losenord = " + "'" + inmatning + "'" + "where aid = '" + aid + "'");
                   JOptionPane.showMessageDialog(null, "Ändringen gick igenom!");
                }
                catch (InfException a){
                    JOptionPane.showMessageDialog(null, "Något blev fel med databasen!");
                    System.out.println(a.getMessage());
                }
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AndraUppgifterRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AndraUppgifterRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AndraUppgifterRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AndraUppgifterRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new AndraUppgifterRuta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAndraKnapp;
    private javax.swing.JLabel jHjalpRuta;
    private javax.swing.JTextField jInmatningsFalt;
    private javax.swing.JButton jTillbakaKnapp;
    private javax.swing.JComboBox<String> jValAvAndring;
    // End of variables declaration//GEN-END:variables
}
